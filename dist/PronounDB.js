function I(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;function me(e){window.enmity.plugins.registerPlugin(e)}function ce(e){return window.enmity.patcher.create(e)}const s=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const t=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage;const X=window.enmity.modules.common.Toasts,O=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users,window.enmity.modules.common.Navigation,window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const D=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale;const de=window.enmity.modules.common.Profiles;window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;function Q(e,o,n){window.enmity.settings.set(e,o,n)}function b(e,o,n){return window.enmity.settings.getBoolean(e,o,n)}function u(e){return window.enmity.assets.getIDByName(e)}var S={Failed:u("Small"),Delete:u("ic_message_delete"),Copy:u("toast_copy_link"),Open:u("ic_leave_stage"),Clipboard:u("pending-alert"),Clock:u("clock"),Pronoun:u("ic_profile_badge_guild_booster_lvl9"),Settings:{Toasts:{Settings:u("ic_selection_checked_24px"),Failed:u("ic_close_circle_24px")},Initial:u("coffee"),Update:u("discover"),Locale:u("ic_locale_24px"),External:u("ic_raised_hand_list"),Edit:u("ic_edit_24px")}};const ue=(e=.1)=>({shadowColor:"#000",shadowOffset:{width:1,height:4},shadowOpacity:e,shadowRadius:4.65,elevation:8}),pe=(e,o)=>{X.open({content:o=="clipboard"?`Copied ${e} to clipboard.`:e,source:o=="clipboard"?S.Clipboard:S.Settings.Initial})};var R={shadow:ue,displayToast:pe},v="PronounDB",_="1.2.0",he="stable",ge="Displays a Pronoun from PronounDB next to your name in the chat :3",ye=[{name:"Acquite<3",id:"581573474296791211",profile:"https://github.com/acquitelol"}],A={download:"https://raw.githubusercontent.com/acquitelol/enmity-pronoun-db/main/dist/PronounDB.js",repo:"https://github.com/acquitelol/enmity-pronoun-db",pronoundb:"https://pronoundb.org/",build:"patch-1.4.56",hash:"94ca71d2"},we="#ff91ff",F={name:v,version:_,release:he,description:ge,authors:ye,plugin:A,color:we},B=(e,o,n,r,a)=>{try{return e(...o)}catch(m){console.warn(`[${n}] The following error happened when trying to ${r} ${a!=null?a:"unspecificied label"}: ${m}`);return}};const J=(e,o,n,r)=>B(()=>{if(e){e.length++,n++;for(let a=e.length-1;a>=n;a--)e[a]=e[a-1];return e[n-1]=o,e.length}},[e,o,n],v,"insert an item at",r),fe=(e,o,n)=>B(()=>{let r=[];for(let a=0;a<e.length;a++)J(r,o(e[a],a,e),r.length);return r},[e,o],v,"map an array at",n);var Z={mapItem:fe,insertItem:J};const{native:L}=window.enmity;function Te(){L.reload()}L.version,L.build,L.device,L.version;async function be(){await B(async function(){const e=`${A.download}?${Math.floor(Math.random()*1001)}.js`,o=await(await fetch(e)).text(),n=o.match(/\d+\.\d+\.\d+/g),r=o.match(/hash:"(.*?)"/);if(!n&&!r)return Ee(v,[_,A.build]);const a=n&&n[0],m=r&&r[1];return a&&a!=_?ee(e,a,"version"):m&&m!=A.hash?ee(e,m,"build"):ve(v,[_,A.hash])},[A],v,"checking if latest version at","the async check for updates callback")}const ee=(e,o,n)=>{O.show({title:"Update found",body:`A newer ${n} is available for ${v}. ${n=="build"?`
The version will remain at ${_}, but the build will update to ${o}.`:""}
Would you like to install ${n} \`${o}\` now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>Se(e,o,n)})},ve=(e,[o,n])=>{console.log(`[${e}] Plugin is on the latest update, which is version ${o} and build ${n}`),O.show({title:"Already on latest",body:`${e} is already updated to the latest version.
Version: \`${o}\`
Build: \`${n}\``,confirmText:"Okay"})},Ee=(e,[o,n])=>{console.log(`[${e}] Plugin failed to update to the latest version and build, remaining at ${o} and ${n}`),O.show({title:"Failed",body:`${e} to find a new version or build.
The current versions will remain as follows:
Version: \`${o}\`
Build: \`${n}\``,confirmText:"Okay"})};async function Se(e,o,n){await B(async function(){window.enmity.plugins.installPlugin(e,({data:r})=>{r=="installed_plugin"||r=="overridden_plugin"?O.show({title:`Updated ${v}`,body:`Successfully updated to ${n} \`${o}\`. 
Would you like to reload Discord now?`,confirmText:"Reload",cancelText:"Not now",onConfirm:()=>Te()}):console.log(`[${v}] Plugin failed to update to ${n} ${o}.`)})},[e,o,n],v,"installing plugin at","new version available")}var Re={checkForUpdates:be},c={map:{},queue:[],fetching:!1,referenceMap:{hh:"he/him",hi:"he/it",hs:"he/she",ht:"he/they",ih:"it/him",ii:"it/its",is:"it/she",it:"it/they",shh:"she/he",sh:"she/her",si:"she/it",st:"she/they",th:"they/he",ti:"they/it",ts:"they/she",tt:"they/them",any:"any",other:"other",ask:"ask",avoid:"avoid pronouns, use name",unspecified:"unspecified"},async updateQueuedPronouns(){if(this.queue.length<=0||this.fetching)return;const e=this.queue.splice(0,49),o=a=>this.queue.length<=0?a:this.map[a]?o(this.queue.shift()):a;for(const a of e)this.map[a]&&(e[a]=o(a));this.fetching=!0;const n=await(await fetch(`https://pronoundb.org/api/v1/lookup-bulk?platform=discord&ids=${e.join(",")}`,{method:"GET",headers:{Accept:"application/json","X-PronounDB-Source":"Enmity"}})).json(),r=Object.fromEntries(Object.entries(n).filter(([a,m])=>!isNaN(+a)));Object.assign(this.map,r),this.fetching=!1,this.queue.length>0&&this.updateQueuedPronouns()}};const xe=(...e)=>e.some(o=>o),Ce=(...e)=>e.every(o=>o);var U={anyIfStatement:xe,allIfStatement:Ce};const{components:i}=window.enmity;i.Alert,i.Button,i.FlatList;const Y=i.Image;i.ImageBackground,i.KeyboardAvoidingView,i.Modal,i.Pressable,i.RefreshControl;const Pe=i.ScrollView;i.SectionList,i.StatusBar,i.StyleSheet,i.Switch;const E=i.Text;i.TextInput,i.TouchableHighlight;const M=i.TouchableOpacity;i.TouchableWithoutFeedback,i.Touchable;const p=i.View;i.VirtualizedList,i.Form,i.FormArrow,i.FormCTA,i.FormCTAButton,i.FormCardSection,i.FormCheckbox;const V=i.FormDivider;i.FormHint,i.FormIcon,i.FormInput,i.FormLabel,i.FormRadio;const h=i.FormRow;i.FormSection,i.FormSelect,i.FormSubLabel;const te=i.FormSwitch;i.FormTernaryCheckBox,i.FormText,i.FormTextColors,i.FormTextSizes;var oe,ne;const Ie=(ne=(oe=I("View","Text"))==null?void 0:oe.Dimensions)==null?void 0:ne.get("window").width;var ie=({style:e,source:o})=>{const[n,r]=t.useState({width:0,height:0}),[a,m]=t.useState(0),T=()=>{const l=x=>typeof x=="string"?parseInt(x.replace("%",""))*Ie/100:x,d=l(e.width);if(!e.maxWidth)return d;const y=l(e.maxWidth);return d>y?y:d};return t.useEffect(()=>{Y.getSize(o,(l,d)=>{r({width:l,height:d})},l=>{console.error(`[${F.name}] ${l} when fetching ${o}`)}),m(T())},[]),t.createElement(Y,{style:[...Array.isArray(e)?e:[e],{height:a*(n.height/n.width)}],source:{uri:o},resizeMode:"stretch"})};const{Animated:N}=window.enmity.modules.common.Components.General,ae=I("transitionToGuild"),H=I("getUser","getCurrentUser"),g=D.createThemedStyleSheet({container:{marginTop:25,marginLeft:"5%",marginBottom:-15,flexDirection:"row"},textContainer:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap",...R.shadow()},image:{width:75,height:75,borderRadius:10,...R.shadow()},mainText:{opacity:.975,letterSpacing:.25},header:{color:s.ThemeColorMap.HEADER_PRIMARY,fontFamily:s.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},subHeader:{color:s.ThemeColorMap.HEADER_SECONDARY,fontSize:12.75}});var $e=({name:e,version:o,plugin:n,authors:r})=>{var a,m;const T=t.useRef(new N.Value(1)).current,l=()=>N.spring(T,{toValue:1.1,duration:10,useNativeDriver:!0}).start(),d=()=>N.spring(T,{toValue:1,duration:250,useNativeDriver:!0}).start(),y=()=>de.showUserProfile({userId:H.getCurrentUser().id}),x={transform:[{scale:T}]};return t.createElement(t.Fragment,null,t.createElement(p,{style:g.container},t.createElement(M,{onPress:y,onPressIn:l,onPressOut:d},t.createElement(N.View,{style:x},t.createElement(Y,{style:[g.image],source:{uri:(m=(a=H==null?void 0:H.getCurrentUser())==null?void 0:a.getAvatarURL())==null?void 0:m.replace("webp","png")}}))),t.createElement(p,{style:g.textContainer},t.createElement(M,{onPress:()=>ae.openURL(n.repo)},t.createElement(E,{style:[g.mainText,g.header]},e)),t.createElement(p,{style:{flexDirection:"row"}},t.createElement(E,{style:[g.mainText,g.subHeader]},"A project by"),Z.mapItem(r,(w,C,P)=>t.createElement(M,{onPress:()=>ae.openURL(w.profile)},t.createElement(E,{style:[g.mainText,g.subHeader,{paddingLeft:4,fontFamily:s.Fonts.DISPLAY_BOLD,flexDirection:"row"}]},w.name,C<P.length-1?",":null)))),t.createElement(p,null,t.createElement(M,{style:{flexDirection:"row"}},t.createElement(E,{style:[g.mainText,g.subHeader]},"Version:"),t.createElement(E,{style:[g.mainText,g.subHeader,{paddingLeft:4,fontFamily:s.Fonts.DISPLAY_BOLD}]},o))))))};const re=D.createThemedStyleSheet({text:{color:s.ThemeColorMap.HEADER_SECONDARY,paddingLeft:"5.5%",paddingRight:10,marginBottom:10,letterSpacing:.25,fontFamily:s.Fonts.PRIMARY_BOLD,fontSize:12}});var q=({label:e,children:o,style:n})=>t.createElement(p,{style:[n,{marginTop:10}]},t.createElement(E,{style:[re.text,re.optionText]},e.toUpperCase()),o);const le=I("transitionToGuild"),f=D.createThemedStyleSheet({icon:{color:s.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:s.ThemeColorMap.TEXT_MUTED,fontFamily:s.Fonts.PRIMARY_MEDIUM},container:{width:"90%",marginLeft:"5%",borderRadius:10,backgroundColor:s.ThemeColorMap.BACKGROUND_MOBILE_SECONDARY,...R.shadow()},subheaderText:{color:s.ThemeColorMap.HEADER_SECONDARY,textAlign:"center",margin:10,marginBottom:50,letterSpacing:.25,fontFamily:s.Fonts.PRIMARY_BOLD,fontSize:14},image:{width:"100%",maxWidth:350,borderRadius:10}});var Ae=({manifest:e})=>{const[o,n]=t.useState(b(e.name,"isTimestamp",!1)),[r,a]=t.useState(b(e.name,"isRole",!0));return t.createElement(Pe,null,t.createElement($e,{name:e.name,version:e.version,plugin:e.plugin,authors:e.authors}),t.createElement(p,{style:{marginTop:20}},t.createElement(q,{label:"Preferences"},t.createElement(p,{style:[f.container]},t.createElement(h,{label:"Timestamps",subLabel:"Use Timestamps instead of OP Tag for the pronoun in the chat area.",onLongPress:()=>R.displayToast(`By default, ${e.name} will use the OP tag to display pronouns. Toggling this option will always use Timestamps instead of OP tag for pronouns.`,"tooltip"),leading:t.createElement(h.Icon,{style:f.icon,source:S.Settings.Locale}),trailing:t.createElement(te,{value:b(e.name,"isTimestamp",!1),onValueChange:()=>{Q(e.name,"isTimestamp",!b(e.name,"isTimestamp",!1)),n(b(e.name,"isTimestamp",!1))}})}),t.createElement(V,null),t.createElement(h,{label:"Roles",subLabel:"Show the pronoun styled as a role instead of plain text inside of profiles.",onLongPress:()=>R.displayToast(`With this option enabled, ${e.name} will style pronouns as roles in profiles. Otherwise, it will style them as plain text.`,"tooltip"),leading:t.createElement(h.Icon,{style:f.icon,source:S.Settings.Edit}),trailing:t.createElement(te,{value:b(e.name,"isRole",!0),onValueChange:()=>{Q(e.name,"isRole",!b(e.name,"isRole",!0)),a(b(e.name,"isRole",!0))}})}))),t.createElement(q,{label:"Previews"},t.createElement(p,{style:{...f.container,maxWidth:350}},t.createElement(ie,{style:f.image,source:`https://cdn.discordapp.com/attachments/${o?"1011346757214543875/1075007230337896448/pronoun-timestamp.png":"1011346757214543875/1075007230107193374/pronoun-tag.png"}`})),t.createElement(p,{style:{...f.container,marginTop:10,maxWidth:350}},t.createElement(ie,{style:f.image,source:`https://cdn.discordapp.com/attachments/${r?"1011346757214543875/1075007778399199282/profile-role.png":"1011346757214543875/1075007778067841044/profile-plain.png"}`}))),t.createElement(q,{label:"Source"},t.createElement(p,{style:f.container},t.createElement(h,{label:"Check for Updates",subLabel:`Search for any ${e.name} updates and notify you if an update is available.`,onLongPress:()=>R.displayToast(`Search GitHub for any new version or build of ${e.name} and prompts you to update, and then prompts you to restart Enmity afterwards.`,"tooltip"),leading:t.createElement(h.Icon,{style:f.icon,source:S.Settings.Update}),trailing:()=>t.createElement(h.Arrow,null),onPress:async function(){await Re.checkForUpdates()}}),t.createElement(V,null),t.createElement(h,{label:"Source",subLabel:`Open the repository of ${e.name} externally.`,onLongPress:()=>R.displayToast(`Opens the repository of ${e.name} on GitHub in an external page to view any source code of the plugin.`,"tooltip"),leading:t.createElement(h.Icon,{style:f.icon,source:S.Open}),trailing:()=>t.createElement(h.Arrow,null),onPress:()=>{le.openURL(e.plugin.repo)}}),t.createElement(V,null),t.createElement(h,{label:"PronounDB",subLabel:`Open the ${e.name} website externally at \`https://pronoundb.org\`.`,onLongPress:()=>R.displayToast("Opens the PronounDB website in an external page which allows you to link your Discord account to PronounDB.","tooltip"),leading:t.createElement(h.Icon,{style:f.icon,source:S.Settings.External}),trailing:()=>t.createElement(h.Arrow,null),onPress:()=>{le.openURL(e.plugin.pronoundb)}})))),t.createElement(E,{style:f.subheaderText},`Build: (${e.plugin.hash}) Release: (${e.release})`))};function De(e,o,n){return window.enmity.utilities.findInReactTree(e,o,n)}const $=D.createThemedStyleSheet({container:{marginTop:12,marginLeft:12,alignSelf:"flex-start"},eyebrow:{textTransform:"uppercase",fontSize:12,lineHeight:16,fontFamily:s.Fonts.PRIMARY_BOLD,color:s.ThemeColorMap.TEXT_NORMAL,marginBottom:10},innerContainer:{backgroundColor:s.ThemeColorMap.BACKGROUND_MOBILE_PRIMARY,borderRadius:8,borderWidth:1,borderColor:s.ThemeColorMap.HEADER_PRIMARY,overflow:"hidden",display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"center"},circle:{width:12,height:12,borderRadius:12/2,backgroundColor:s.ThemeColorMap.HEADER_PRIMARY,marginLeft:8,marginRight:6},content:{fontSize:14,paddingRight:8,paddingTop:8,paddingBottom:8},text:{fontFamily:s.Fonts.DISPLAY_NORMAL,color:s.ThemeColorMap.TEXT_NORMAL}});var _e=({pronoun:e})=>t.createElement(p,{style:$.container},t.createElement(E,{style:$.eyebrow},"Pronouns"),t.createElement(M,{onPress:()=>X.open({content:e,source:S.Pronoun})},b(F.name,"isRole",!0)?t.createElement(p,{style:$.innerContainer},t.createElement(p,{style:$.circle}),t.createElement(E,{style:[$.text,$.content]},e)):t.createElement(E,{style:[$.text,{fontSize:16}]},e)));const k=ce("pronoun-db"),Fe=I("PRIMARY_INFO_TOP_OFFSET","SECONDARY_INFO_TOP_MARGIN","SIDE_PADDING"),Le=I("getUser"),G=I("View"),{DCDChatManager:Me}=G.NativeModules,se=D.createThemedStyleSheet({opTagBackgroundColor:{color:s.ThemeColorMap.HEADER_PRIMARY},opTagTextColor:{color:s.ThemeColorMap.BACKGROUND_PRIMARY}}),Oe={...F,onStart(){k.before(Le,"getUser",(e,o,n)=>{const r=o[0];c.map[r]||Z.insertItem(c.queue,r,c.queue.length,"user id pronoun queue"),c.updateQueuedPronouns()}),k.after(Fe.default,"type",(e,o,n)=>{var r,a,m,T,l;const d=(a=(r=De(n,w=>{var C,P,W;return U.allIfStatement((C=w==null?void 0:w.props)==null?void 0:C.children.find(z=>{var j,K;return typeof((K=(j=z==null?void 0:z.props)==null?void 0:j.displayProfile)==null?void 0:K.userId)=="string"}),((P=w==null?void 0:w.type)==null?void 0:P.displayName)==="View",Array.isArray((W=w==null?void 0:w.props)==null?void 0:W.style))}))==null?void 0:r.props)==null?void 0:a.children;if(!d)return n;const{userId:y}=(l=(T=(m=d==null?void 0:d.find(w=>{var C,P;return typeof((P=(C=w==null?void 0:w.props)==null?void 0:C.displayProfile)==null?void 0:P.userId)=="string"}))==null?void 0:m.props)==null?void 0:T.displayProfile)!=null?l:{};if(U.anyIfStatement(!y,!c.map[y],c.referenceMap[c.map[y]]==="unspecified"))return console.log(`uid: ${y}, map: ${c.map[y]}, ref: ${c.referenceMap[c.map[y]]}`),n;const x=c.referenceMap[c.map[y]];d.unshift(t.createElement(_e,{pronoun:x}))}),k.before(Me,"updateRows",(e,o,n)=>{var r,a,m;const T=JSON.parse(o[1]);for(const l of T){if(U.anyIfStatement(l.type!==1,!((r=l==null?void 0:l.message)!=null&&r.authorId),!c.map[(a=l==null?void 0:l.message)==null?void 0:a.authorId],c.referenceMap[c.map[(m=l==null?void 0:l.message)==null?void 0:m.authorId]]==="unspecified"))continue;const d=c.referenceMap[c.map[l.message.authorId]];if(b(F.name,"isTimestamp",!1)&&l.message.timestamp){l.message.timestamp+=" \u2022 "+d;continue}l.message.opTagText&&(l.message.tagText=(l.message.tagText?l.message.tagText+" \u2022 ":"")+l.message.opTagText),l.message.opTagText=d,l.message.opTagTextColor=G.processColor(se.opTagTextColor.color),l.message.opTagBackgroundColor=G.processColor(se.opTagBackgroundColor.color)}o[1]=JSON.stringify(T)})},onStop(){k.unpatchAll()},getSettingsPanel(){return t.createElement(Ae,{manifest:F})}};me(Oe);
